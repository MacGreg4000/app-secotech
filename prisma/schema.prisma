generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Settings {
  id        Int      @id @default(1)
  logo      String?
  updatedAt DateTime @updatedAt

  @@map("settings")
}

model admintask {
  id          Int       @id @default(autoincrement())
  chantierId  String
  completedBy String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  completed   Boolean   @default(false)
  completedAt DateTime?
  taskType    String
  title       String?
  chantier    Chantier  @relation(fields: [chantierId], references: [chantierId], map: "AdminTask_chantierId_fkey")
  user        User?     @relation(fields: [completedBy], references: [id], map: "AdminTask_completedBy_fkey")

  @@unique([chantierId, taskType], map: "AdminTask_chantierId_taskType_key")
  @@index([chantierId], map: "AdminTask_chantierId_idx")
  @@index([completedBy], map: "AdminTask_completedBy_idx")
}

model pret {
  id                  String      @id
  machineId           String
  userId              String
  datePret            DateTime    @default(now())
  dateRetourPrevue    DateTime
  dateRetourEffective DateTime?
  statut              pret_statut @default(EN_COURS)
  commentaire         String?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime
  emprunteur          String
  machine             Machine     @relation(fields: [machineId], references: [id], map: "Pret_machineId_fkey")
  user                User        @relation(fields: [userId], references: [id], map: "Pret_userId_fkey")

  @@index([machineId], map: "Pret_machineId_idx")
  @@index([userId], map: "Pret_userId_idx")
}

model soustraitant {
  id                           String                         @id
  nom                          String
  email                        String                         @unique(map: "SousTraitant_email_key")
  contact                      String?
  adresse                      String?
  telephone                    String?
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime
  tva                          String?
  commandes                    CommandeSousTraitant[]
  contrats                     contrat[]
  soustraitant_etat_avancement soustraitant_etat_avancement[]
}

model contrat {
  id             String       @id @default(cuid())
  soustraitantId String
  url            String
  dateGeneration DateTime     @default(now())
  dateSignature  DateTime?
  estSigne       Boolean      @default(false)
  token          String?      @unique
  soustraitant   soustraitant @relation(fields: [soustraitantId], references: [id], onDelete: Cascade)

  @@index([soustraitantId])
}

model FicheTechnique {
  id            String   @id @default(uuid())
  titre         String
  categorie     String
  sousCategorie String?
  fichierUrl    String
  description   String?  @db.Text
  referenceCC   String?  // Référence au cahier des charges
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("fiches_techniques")
}

model Commande {
  id             Int             @id @default(autoincrement())
  chantierId     String
  clientId       String?
  dateCommande   DateTime        @default(now())
  reference      String?
  tauxTVA        Float           @default(20)
  sousTotal      Float           @default(0)
  totalOptions   Float           @default(0)
  tva            Float           @default(0)
  total          Float           @default(0)
  statut         String          @default("BROUILLON")
  estVerrouillee Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  lignes         LigneCommande[]

  @@index([chantierId], map: "Commande_chantierId_idx")
  @@index([clientId], map: "Commande_clientId_idx")
  @@map("commande")
}

model LigneCommande {
  id           Int      @id @default(autoincrement())
  commandeId   Int
  ordre        Int
  article      String
  description  String   @db.Text
  type         String   @default("QP")
  unite        String
  prixUnitaire Float
  quantite     Float
  total        Float
  estOption    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  commande     Commande @relation(fields: [commandeId], references: [id], onDelete: Cascade)

  @@index([commandeId], map: "LigneCommande_commandeId_idx")
  @@map("lignecommande")
}

model EtatAvancement {
  id                           Int                            @id @default(autoincrement())
  chantierId                   String
  numero                       Int
  date                         DateTime                       @default(now())
  commentaires                 String?                        @db.Text
  estFinalise                  Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  createdBy                    String
  avenants                     AvenantEtatAvancement[]
  lignes                       LigneEtatAvancement[]
  soustraitant_etat_avancement soustraitant_etat_avancement[]

  @@unique([chantierId, numero])
  @@index([chantierId])
  @@map("etat_avancement")
}

model LigneEtatAvancement {
  id                 Int            @id @default(autoincrement())
  etatAvancementId   Int
  ligneCommandeId    Int
  quantitePrecedente Float          @default(0)
  quantiteActuelle   Float          @default(0)
  quantiteTotale     Float          @default(0)
  montantPrecedent   Float          @default(0)
  montantActuel      Float          @default(0)
  montantTotal       Float          @default(0)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  article            String
  description        String         @db.Text
  prixUnitaire       Float
  quantite           Float
  type               String
  unite              String
  etatAvancement     EtatAvancement @relation(fields: [etatAvancementId], references: [id], onDelete: Cascade)

  @@index([etatAvancementId])
  @@map("ligne_etat_avancement")
}

model AvenantEtatAvancement {
  id                 Int            @id @default(autoincrement())
  etatAvancementId   Int
  article            String
  description        String         @db.Text
  type               String
  unite              String
  prixUnitaire       Float
  quantite           Float
  quantitePrecedente Float          @default(0)
  quantiteActuelle   Float          @default(0)
  quantiteTotale     Float          @default(0)
  montantPrecedent   Float          @default(0)
  montantActuel      Float          @default(0)
  montantTotal       Float          @default(0)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  etatAvancement     EtatAvancement @relation(fields: [etatAvancementId], references: [id], onDelete: Cascade)

  @@index([etatAvancementId])
  @@map("avenant_etat_avancement")
}

model companysettings {
  id            String   @id @default("COMPANY_SETTINGS")
  name          String
  address       String
  zipCode       String
  city          String
  phone         String
  email         String
  tva           String
  logo          String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime
  emailFrom     String?
  emailFromName String?
  emailHost     String?
  emailPassword String?
  emailPort     String?
  emailSecure   Boolean? @default(false)
  emailUser     String?
  iban          String
}

model CommandeSousTraitant {
  id                           Int                            @id @default(autoincrement())
  chantierId                   String
  soustraitantId               String
  dateCommande                 DateTime                       @default(now())
  reference                    String?
  tauxTVA                      Float                          @default(0)
  sousTotal                    Float                          @default(0)
  tva                          Float                          @default(0)
  total                        Float                          @default(0)
  statut                       String                         @default("BROUILLON")
  estVerrouillee               Boolean                        @default(false)
  createdAt                    DateTime                       @default(now())
  updatedAt                    DateTime                       @updatedAt
  soustraitant                 soustraitant                   @relation(fields: [soustraitantId], references: [id], onDelete: Cascade)
  lignes                       LigneCommandeSousTraitant[]
  soustraitant_etat_avancement soustraitant_etat_avancement[]

  @@index([chantierId])
  @@index([soustraitantId])
  @@map("commande_soustraitant")
}

model LigneCommandeSousTraitant {
  id                     Int                  @id @default(autoincrement())
  commandeSousTraitantId Int
  ordre                  Int
  article                String
  description            String               @db.Text
  type                   String               @default("QP")
  unite                  String
  prixUnitaire           Float
  quantite               Float
  total                  Float
  createdAt              DateTime             @default(now())
  updatedAt              DateTime             @updatedAt
  commandeSousTraitant   CommandeSousTraitant @relation(fields: [commandeSousTraitantId], references: [id], onDelete: Cascade)

  @@index([commandeSousTraitantId])
  @@map("ligne_commande_soustraitant")
}

model avenant_soustraitant_etat_avancement {
  id                           Int                          @id @default(autoincrement())
  soustraitantEtatAvancementId Int
  article                      String
  description                  String                       @db.Text
  type                         String
  unite                        String
  prixUnitaire                 Float
  quantite                     Float
  quantitePrecedente           Float                        @default(0)
  quantiteActuelle             Float                        @default(0)
  quantiteTotale               Float                        @default(0)
  montantPrecedent             Float                        @default(0)
  montantActuel                Float                        @default(0)
  montantTotal                 Float                        @default(0)
  createdAt                    DateTime                     @default(now())
  updatedAt                    DateTime
  soustraitant_etat_avancement soustraitant_etat_avancement @relation(fields: [soustraitantEtatAvancementId], references: [id], onDelete: Cascade)

  @@index([soustraitantEtatAvancementId])
}

model ligne_soustraitant_etat_avancement {
  id                           Int                          @id @default(autoincrement())
  soustraitantEtatAvancementId Int
  article                      String
  description                  String                       @db.Text
  type                         String
  unite                        String
  prixUnitaire                 Float
  quantite                     Float
  quantitePrecedente           Float                        @default(0)
  quantiteActuelle             Float                        @default(0)
  quantiteTotale               Float                        @default(0)
  montantPrecedent             Float                        @default(0)
  montantActuel                Float                        @default(0)
  montantTotal                 Float                        @default(0)
  createdAt                    DateTime                     @default(now())
  updatedAt                    DateTime
  soustraitant_etat_avancement soustraitant_etat_avancement @relation(fields: [soustraitantEtatAvancementId], references: [id], onDelete: Cascade)

  @@index([soustraitantEtatAvancementId])
}

model soustraitant_etat_avancement {
  id                                   Int                                    @id @default(autoincrement())
  soustraitantId                       String
  numero                               Int
  date                                 DateTime                               @default(now())
  commentaires                         String?                                @db.Text
  estFinalise                          Boolean                                @default(false)
  createdAt                            DateTime                               @default(now())
  updatedAt                            DateTime                               @updatedAt
  commandeSousTraitantId               Int?
  etatAvancementId                     Int
  avenant_soustraitant_etat_avancement avenant_soustraitant_etat_avancement[]
  ligne_soustraitant_etat_avancement   ligne_soustraitant_etat_avancement[]
  photos                               photo_soustraitant_etat_avancement[]
  commande_soustraitant                CommandeSousTraitant?                  @relation(fields: [commandeSousTraitantId], references: [id])
  etat_avancement                      EtatAvancement                         @relation(fields: [etatAvancementId], references: [id], onDelete: Cascade)
  soustraitant                         soustraitant                           @relation(fields: [soustraitantId], references: [id], onDelete: Cascade)

  @@unique([etatAvancementId, soustraitantId, numero])
  @@index([commandeSousTraitantId])
  @@index([etatAvancementId])
  @@index([soustraitantId])
}

model photo_soustraitant_etat_avancement {
  id                           Int                          @id @default(autoincrement())
  soustraitantEtatAvancementId Int
  url                          String
  description                  String?
  dateAjout                    DateTime                     @default(now())
  soustraitant_etat_avancement soustraitant_etat_avancement @relation(fields: [soustraitantEtatAvancementId], references: [id], onDelete: Cascade)

  @@index([soustraitantEtatAvancementId])
}

model Depense {
  id           String   @id @default(uuid())
  chantierId   String
  date         DateTime @default(now())
  montant      Float
  description  String   @db.Text
  categorie    String
  fournisseur  String?
  reference    String?
  justificatif String?
  createdBy    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([chantierId])
  @@index([createdBy])
  @@map("depense")
}

model UserNotes {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_notes")
}

model Rack {
  id           String        @id @default(uuid())
  nom          String
  position     String
  lignes       Int
  colonnes     Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  emplacements Emplacement[]

  @@map("rack")
}

model Emplacement {
  id        String     @id @default(uuid())
  rackId    String
  ligne     Int
  colonne   Int
  codeQR    String     @unique
  statut    String     @default("libre")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  rack      Rack       @relation(fields: [rackId], references: [id], onDelete: Cascade)
  materiaux Materiau[]

  @@unique([rackId, ligne, colonne])
  @@index([rackId])
  @@map("emplacement")
}

model Materiau {
  id            String       @id @default(uuid())
  nom           String
  description   String?      @db.Text
  quantite      Int          @default(1)
  codeQR        String?      @unique
  emplacementId String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  emplacement   Emplacement? @relation(fields: [emplacementId], references: [id])

  @@index([emplacementId])
  @@map("materiau")
}

model Avenant {
  id          Int      @id @default(autoincrement())
  numero      Int
  date        DateTime @default(now())
  description String?
  chantierId  String
  marcheId    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  Chantier    Chantier @relation(fields: [chantierId], references: [chantierId])
  Marche      Marche   @relation(fields: [marcheId], references: [id])

  @@unique([chantierId, numero])
  @@index([marcheId], map: "Avenant_marcheId_fkey")
}

model Chantier {
  id                  Int       @id @default(autoincrement())
  chantierId          String    @unique
  nomChantier         String
  villeChantier       String?
  adresseChantier     String?
  dateDebut           DateTime?
  dateFinPrevue       DateTime?
  dateFinReelle       DateTime?
  statut              String    @default("A_VENIR")
  budget              Float?
  description         String?
  typeDuree           String    @default("CALENDRIER") // "CALENDRIER" ou "OUVRABLE"
  dureeEnJours        Int?      // Nombre de jours prévus pour le chantier
  createdAt           DateTime  @default(now())
  updatedAt           DateTime
  clientId            String?
  client              Client?   @relation(fields: [clientId], references: [id], map: "Chantier_clientId_fkey")
  taches              Tache[]
  marches             Marche[]
  notes               Note[]
  admintasks          admintask[]
  etats               Etat[]
  avenants            Avenant[]
  documents           Document[]
  bonsRegie           BonRegie[]

  @@index([clientId], map: "Chantier_clientId_idx")
}

model Client {
  id        String     @id
  nom       String
  email     String?
  adresse   String?
  telephone String?
  createdAt DateTime   @default(now())
  updatedAt DateTime
  Chantier  Chantier[]
}

model Document {
  id          Int      @id @default(autoincrement())
  nom         String
  type        String   // Types: 'rapport-visite', 'document-administratif', 'justificatif-depense', 'photo-chantier'
  url         String
  taille      Int
  mimeType    String
  chantierId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  createdBy   String
  metadata    Json?    // Pour stocker les métadonnées supplémentaires comme les personnes présentes, les annotations, etc.
  chantier    Chantier @relation(fields: [chantierId], references: [chantierId], onDelete: Cascade)
  User        User     @relation(fields: [createdBy], references: [id])

  @@index([chantierId])
  @@index([createdBy])
  @@map("Document")
}

model DocumentOuvrier {
  id             String    @id
  nom            String
  type           String
  url            String
  dateExpiration DateTime?
  ouvrierId      String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
  Ouvrier        Ouvrier   @relation(fields: [ouvrierId], references: [id], onDelete: Cascade)

  @@index([ouvrierId])
}

model Etat {
  id         Int         @id @default(autoincrement())
  numero     Int
  date       DateTime
  chantierId String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime
  Chantier   Chantier    @relation(fields: [chantierId], references: [chantierId], onDelete: Cascade)
  LigneEtat  LigneEtat[]

  @@unique([chantierId, numero])
}

model LigneEtat {
  id            Int         @id @default(autoincrement())
  etatId        Int
  ligneMarcheId Int
  quantite      Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime
  Etat          Etat        @relation(fields: [etatId], references: [id], onDelete: Cascade)
  LigneMarche   LigneMarche @relation(fields: [ligneMarcheId], references: [id])

  @@index([etatId])
  @@index([ligneMarcheId])
}

model LigneMarche {
  id           Int         @id @default(autoincrement())
  article      Int
  descriptif   String
  unite        String
  quantite     Float
  prixUnitaire Float
  marcheId     Int
  LigneEtat    LigneEtat[]
  Marche       Marche      @relation(fields: [marcheId], references: [id], onDelete: Cascade)

  @@index([marcheId])
}

model Machine {
  id           String         @id
  nom          String
  modele       String
  numeroSerie  String?
  localisation String
  statut       Machine_statut @default(DISPONIBLE)
  dateAchat    DateTime?
  qrCode       String         @unique
  commentaire  String?        @db.Text
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  pret         pret[]
}

model Marche {
  id           Int           @id @default(autoincrement())
  chantierId   String        @unique
  dateImport   DateTime      @default(now())
  montantTotal Float
  Avenant      Avenant[]
  LigneMarche  LigneMarche[]
  Chantier     Chantier      @relation(fields: [chantierId], references: [chantierId])
}

model Note {
  id         Int      @id @default(autoincrement())
  chantierId String
  contenu    String   @db.Text
  createdBy  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  Chantier   Chantier @relation(fields: [chantierId], references: [chantierId])
  User       User     @relation(fields: [createdBy], references: [id])

  @@index([chantierId])
  @@index([createdBy])
}

model Ouvrier {
  id              String            @id
  nom             String
  prenom          String
  email           String?
  telephone       String?
  dateEntree      DateTime
  poste           String
  sousTraitantId  String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  DocumentOuvrier DocumentOuvrier[]

  @@index([sousTraitantId])
}

model Tache {
  id          String    @id
  label       String
  completed   Boolean   @default(false)
  completedAt DateTime?
  chantierId  String
  category    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  Chantier    Chantier  @relation(fields: [chantierId], references: [chantierId], onDelete: Cascade)

  @@unique([chantierId, id])
}

model User {
  id        String      @id
  email     String      @unique
  password  String
  role      User_role   @default(USER)
  createdAt DateTime    @default(now())
  updatedAt DateTime
  name      String?
  Document  Document[]
  Note      Note[]
  admintask admintask[]
  pret      pret[]
}

enum pret_statut {
  EN_COURS
  TERMINE
}

enum User_role {
  ADMIN
  MANAGER
  USER
}

enum Machine_statut {
  DISPONIBLE
  PRETE
  EN_PANNE
  EN_REPARATION
  MANQUE_CONSOMMABLE
}

model BonRegie {
  id                 Int       @id @default(autoincrement())
  dates              String    // Dates d'intervention (24/25/26/27/28/03/2023)
  client             String    // Nom du client
  nomChantier        String    // Nom du chantier
  description        String    // Description des travaux
  tempsPreparation   Float?    // Temps de préparation en atelier (heures)
  tempsTrajets       Float?    // Durée du trajet (heures)
  tempsChantier      Float?    // Temps passé sur chantier (heures)
  nombreTechniciens  Int?      // Nombre de techniciens
  materiaux          String    // Liste des matériaux utilisés
  nomSignataire      String    // Nom du responsable sur site
  signature          String    @db.Text // URL ou data de la signature
  dateSignature      DateTime  // Date de la signature
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  // Relation optionnelle avec un chantier (peut être null initialement)
  chantierId         String?
  chantier           Chantier? @relation(fields: [chantierId], references: [chantierId])

  @@index([chantierId])
  @@map("bonRegie")
}
