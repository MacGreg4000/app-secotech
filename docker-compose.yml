version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: appsecotech
    restart: always
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=mysql://appsecotech:${MYSQL_PASSWORD}@db:3306/appsecotech?connection_limit=5
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-un_secret_tres_securise_pour_nextauth_123456789}
      - NODE_ENV=production
    depends_on:
      - db
    volumes:
      - ./public:/app/public
    networks:
      - appsecotech-network

  db:
    image: mysql:8.0
    container_name: appsecotech-mysql
    restart: always
    environment:
      - MYSQL_DATABASE=appsecotech
      - MYSQL_USER=appsecotech
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
    ports:
      - "3306:3306"
    volumes:
      - appsecotech-db-data:/var/lib/mysql
    networks:
      - appsecotech-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Service d'initialisation - à exécuter uniquement lors de la première installation
  # Pour exécuter : docker-compose run --rm init
  init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: appsecotech-init
    environment:
      - DATABASE_URL=mysql://appsecotech:${MYSQL_PASSWORD}@db:3306/appsecotech?connection_limit=5
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-un_secret_tres_securise_pour_nextauth_123456789}
      - NODE_ENV=production
    depends_on:
      - db
    networks:
      - appsecotech-network
    command: sh -c "./init-container.sh"
    profiles:
      - init

networks:
  appsecotech-network:
    driver: bridge

volumes:
  appsecotech-db-data: 